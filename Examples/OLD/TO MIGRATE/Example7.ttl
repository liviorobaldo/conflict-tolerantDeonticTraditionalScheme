@prefix : <https://w3id.org/ontology/conflict-tolerantdeontictraditionalscheme#> .
@prefix : <https://w3id.org/ontology/conflict-tolerantdeontictraditionalscheme#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix soa: <https://w3id.org/ontology/conflict-tolerantdeontictraditionalscheme/soa#> .
@base <https://w3id.org/ontology/conflict-tolerantdeontictraditionalscheme#> .


########################################################################################################################################
# Description:
#---------------------------------------------------------------------------------------------------------------------------------------
# This example contains the following statements:
# - (1) "It is not optional for John to pay in cash" (i.e., it is either obligatory or prohibited, but we don't know which one of the two).
# - (2) "John is permitted to pay in cash".
# - (3) "John pays £3 in cash".
# The SPARQL rules defined infers: 
# - From (1), that (4) "John is obliged to pay in cash or John is obliged to not pay in cash" [¬OP(p)=>(OB(p)∨OB(¬p))]
# - From (2), that (5) "John is not obliged to not pay in cash" [PE(p)=>¬OB(¬p)]
# - From (4) and (5) that (6) "John is obliged to pay in cash" [via the Disjunctive Syllogism at the level of the statements].
# Finally, it is inferred that (3) complies with (6).
########################################################################################################################################



########################################################################################################################################
# Eventuality types and thematic roles
########################################################################################################################################

soa:Pay rdf:type rdfs:Class, :Eventuality.
soa:has-agent rdf:type rdf:Property, :ThematicRole.
soa:has-object rdf:type rdf:Property, :ThematicRole.
soa:has-instrument rdf:type rdf:Property, :ThematicRole.

########################################################################################################################################
# Input facts:
########################################################################################################################################

#It is not optional for John to pay in cash
[rdf:type :false,:hold; rdf:subject soa:epcj; rdf:predicate rdf:type; rdf:object :Optional].
soa:epcj rdf:type soa:Pay; soa:has-agent soa:John; soa:has-instrument soa:cash.

#John is permitted to pay in cash.
soa:epcj rdf:type :Permitted.
soa:enpcj :not soa:epcj.

#John pays £3 in cash.
soa:ep3cj rdf:type soa:Pay,:Rexist; soa:has-agent soa:John; soa:has-object soa:3pounds; soa:has-instrument soa:cash.
